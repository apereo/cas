name: Publish Documentation

env:
  JAVA_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  TERM: xterm-256color
  GH_PAGES_TOKEN: ${{ secrets.GH_PAGES_TOKEN }}
  GH_PACKAGE_REGISTRY_USER: ${{ secrets.GH_PACKAGE_REGISTRY_USER }}
  GH_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GH_PACKAGE_REGISTRY_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GRADLE_BUILDCACHE_USER: ci
  GRADLE_BUILDCACHE_PSW: ${{ secrets.GRADLE_BUILDCACHE_PSW }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  JDK_CURRENT: 21
  JDK_DISTRIBUTION: "corretto"
  DOCS_BRANCH: master
  RUBY_VERSION: 3.2.2
  RUBY_GC_HEAP_GROWTH_MAX_SLOTS: 104857600 # 4GB
  RUBY_GC_HEAP_GROWTH_FACTOR: 2

##########################################################################

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - '!**.**.**'
      - '!heroku-*'
  pull_request:
    types: [ labeled ]
    branches: [ master, pr-* ]

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository != 'apereo/cas' }}

##########################################################################

jobs:
  trigger-ci:
    if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'CI')) && !contains(github.event.pull_request.labels.*.name, 'Renovate') && !contains(github.event.head_commit.message, 'trigger dependency update') && !contains(github.event.head_commit.message, 'documentation update') }}
    runs-on: ubuntu-latest
    steps:
      - name: Trigger CI
        run: echo "CI Triggered"
  initialize:
    needs: [trigger-ci]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Initialize
        run: ls ./ci && find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh

  ##########################################################################

  publish-docs:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'CI') }}
    needs: [initialize]
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Initialize
        run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install Ruby gems
        run: gem install bundler
      - name: Setup Jekyll Cache
        uses: actions/cache@v4
        with:
          path: |
            jekyll/.jekyll-metadata
            jekyll/.jekyll-cache
          key: ${{ runner.os }}-${{ github.repository }}
      - name: Publish Documentation
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 55
          max_attempts: 2
          shell: bash
          command: ./ci/docs/publish.sh --branch ${{ env.DOCS_BRANCH }}
