{
  "dependencies": "json-service-registry,service-registry-stream-kafka,reports",
  "conditions": {
    "docker": "true"
  },
  "initScript": "${PWD}/ci/tests/puppeteer/scenarios/${SCENARIO}/init.sh",
  "properties": [
    "--logging.level.org.apereo.cas=warn",
    "--logging.level.org.springframework.kafka=info",
    "--logging.level.org.apache.kafka=warn",

    "--management.endpoints.access.default=UNRESTRICTED",
    "--management.endpoints.web.exposure.include=*",
    "--cas.monitor.endpoints.endpoint.defaults.access=ANONYMOUS",

    "--cas.service-registry.stream.kafka.bootstrap-address=localhost:9092",
    "--cas.service-registry.stream.kafka.topic.name=CasRegisteredServicesKafkaTopic",
    
    "--cas.service-registry.schedule.enabled=false",
    "--cas.service-registry.stream.core.enabled=true",
    "--cas.service-registry.core.init-from-json=false",
    "--cas.service-registry.json.watcher-enabled=true"
  ],
  "bootstrapScript": "${PWD}/ci/tests/kafka/run-kafka-server.sh",
  "instances": 2,
  "instance1": {
    "properties": [
      "--cas.service-registry.json.location=file:${PWD}/ci/tests/puppeteer/scenarios/${SCENARIO}/services",
      "--cas.service-registry.stream.core.replication-mode=ACTIVE"
    ]
  },
  "instance2": {
    "properties": [
      "--cas.service-registry.json.location=file:${TMPDIR}/cas-services",
      "--cas.service-registry.stream.core.replication-mode=PASSIVE"
    ]
  }
}
