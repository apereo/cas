description = "Apereo CAS Core Web"
dependencies {
    api project(":api:cas-server-core-api-web")
    api project(":api:cas-server-core-api-ticket")
    api project(":api:cas-server-core-api-services")
    api project(":api:cas-server-core-api-logout")
    api project(":api:cas-server-core-api-webflow")

    implementation project(":core:cas-server-core-authentication-api")
    implementation project(":core:cas-server-core-configuration-api")
    implementation project(":core:cas-server-core-util-api")
    implementation project(":core:cas-server-core-web-api")

    testImplementation project(path: ":core:cas-server-core-util-api", configuration: "tests")
    testImplementation project(path: ":core:cas-server-core-authentication-api", configuration: "tests")
    testImplementation project(path: ":core:cas-server-core-services", configuration: "tests")

    testImplementation project(":core:cas-server-core-services-registry")
    testImplementation project(":core:cas-server-core-services-api")
    testImplementation project(":core:cas-server-core-services-authentication")
    
    testRuntimeOnly libraries.webjars
    testRuntimeOnly libraries.websockets

    implementation libraries.pac4jcore
    implementation libraries.nimbus
    implementation libraries.snakeyaml
}

// Filter properties from gradle.properties into this sub-project's property file resources  
def gradleProps = new Properties()
def gradlePropFile = file("../../gradle.properties")
gradlePropFile.withInputStream { gradleProps.load(it) }

processResources {
    inputs.properties(gradleProps)
    filesMatching("**/*.properties") {
        expand(gradleProps)
    }
}

/* 
Manually deleting jar if we gradle.properties newer than jar
Probably a better way, but watch out for "tasks.jar.onlyIf" elsewhere in build scripts
 */
jar.dependsOn 'deleteJar'

task deleteJar(type: Delete) {
    def jarFile = file("build/libs/${project.name}-${project.version}.jar")
    def propModified = gradlePropFile.lastModified()
    def jarModified = jarFile.lastModified()
    if (propModified > jarModified) { 
        doLast {
            logger.info("""
Deleting JAR files [$jarFile] due to [gradle.properties] update because it was updated last at [$propModified]
which is the greater than the last time the JAR files were updates at [$jarModified].
""")
        }
        delete jarFile
    }
}
