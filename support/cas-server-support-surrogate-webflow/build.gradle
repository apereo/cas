description = "Apereo CAS Surrogate Authentication Webflow"
ext {
    publishMetadata = true
    projectMetadata = [
            category: "Impersonation",
            title: "Impersonation",
            aliases: ["surrogate", "impersonation", "sudo"]
    ]
}
dependencies {
    api project(":api:cas-server-core-api-webflow")

    implementation project(":core:cas-server-core-authentication-api")
    implementation project(":core:cas-server-core-authentication-mfa-api")
    implementation project(":core:cas-server-core-webflow")
    implementation project(":core:cas-server-core-webflow-api")
    implementation project(":core:cas-server-core-webflow-mfa")
    implementation project(":core:cas-server-core-webflow-mfa-api")
    implementation project(":core:cas-server-core-configuration-api")
    implementation project(":core:cas-server-core-util-api")
    implementation project(":core:cas-server-core-services")
    implementation project(":core:cas-server-core-services-api")
    implementation project(":core:cas-server-core-web-api")
    implementation project(":core:cas-server-core-audit")
    implementation project(":core:cas-server-core-audit-api")
    
    implementation project(":support:cas-server-support-surrogate-authentication")
    implementation project(":support:cas-server-support-surrogate-api")
    implementation project(":support:cas-server-support-surrogate-core")
    implementation project(":support:cas-server-support-person-directory-core")

    compileOnly project(":support:cas-server-support-pac4j-api")
    compileOnly project(":support:cas-server-support-pac4j-core")
    compileOnly project(":support:cas-server-support-pac4j-webflow")
    compileOnly project(":support:cas-server-support-passwordless-api")
    compileOnly project(":support:cas-server-support-passwordless-webflow")



    testImplementation project(":support:cas-server-support-themes")

    testImplementation project(":core:cas-server-core")
    testImplementation project(":core:cas-server-core-logout")
    testImplementation project(":core:cas-server-core-notifications")
    testImplementation project(":core:cas-server-core-authentication")
    testImplementation project(":core:cas-server-core-services-authentication")
    testImplementation project(":core:cas-server-core-authentication-attributes")
    testImplementation project(":core:cas-server-core-authentication-mfa")
    testImplementation project(":core:cas-server-core-tickets")
    testImplementation project(":core:cas-server-core-cookie")
    testImplementation project(":core:cas-server-core-util")
    testImplementation project(":core:cas-server-core-web")
    testImplementation project(":core:cas-server-core-configuration")
    
    testImplementation project(":support:cas-server-support-saml-core")
    testImplementation project(":support:cas-server-support-pac4j-webflow")
    testImplementation project(":support:cas-server-support-pac4j-api")
    testImplementation project(":support:cas-server-support-passwordless-api")
    testImplementation project(":support:cas-server-support-passwordless-webflow")

    testImplementation project(path: ":core:cas-server-core-webflow", configuration: "tests")
    testImplementation project(path: ":core:cas-server-core", configuration: "tests")
    testImplementation project(path: ":core:cas-server-core-services", configuration: "tests")
    testImplementation project(path: ":core:cas-server-core-authentication", configuration: "tests")
    testImplementation project(path: ":core:cas-server-core-authentication-api", configuration: "tests")
    testImplementation project(path: ":core:cas-server-core-util", configuration: "tests")
    testImplementation project(path: ":core:cas-server-core-util-api", configuration: "tests")

    testImplementation project(path: ":support:cas-server-support-person-directory-core", configuration: "tests")
}
